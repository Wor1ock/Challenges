def find_Cx(x):
    i = 1
    j = 1
    a_i = i * i  # Получаем i-й член последовательности A (квадрат натурального числа)
    b_j = j * j * j  # Получаем j-й член последовательности B (куб натурального числа)

    while x > 0:
        if a_i < b_j:
            yield a_i
            i += 1
            a_i = i * i
        elif a_i > b_j:
            yield b_j
            j += 1
            b_j = j * j * j
        else:
            i += 1
            j += 1
            a_i = i * i
            b_j = j * j * j
            x -= 1
result_4 = list(find_Cx(4))  # получаем результат в виде списка
print(result_4[-1])  # выводим последний элемент этого списка, который и будет C4
